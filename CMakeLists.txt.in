cmake_minimum_required(VERSION 3.0.0)
project(hcore VERSION @@{VERSION}@@ LANGUAGES C CXX)

# init

set(CMAKE_DEBUG_POSTFIX -debug)
## GoogleTest requires at least C++14
set(CMAKE_CXX_STANDARD 14)

if (DEFINED ENV{HCORE_INSTALL_LIBDIR})
    set(HCORE_INSTALL_LIBDIR $ENV{HCORE_INSTALL_LIBDIR})
else ()
    set(HCORE_INSTALL_LIBDIR lib)
endif ()

if (DEFINED ENV{HCORE_INSTALL_INCLUDEDIR})
    set(HCORE_INSTALL_INCLUDEDIR $ENV{HCORE_INSTALL_INCLUDEDIR})
else ()
    set(HCORE_INSTALL_INCLUDEDIR include)
endif ()

if (DEFINED ENV{HCORE_INSTALL_CMAKEDIR})
    set(HCORE_INSTALL_CMAKEDIR $ENV{HCORE_INSTALL_CMAKEDIR})
else ()
    set(HCORE_INSTALL_CMAKEDIR lib/cmake/hcore)
endif ()

aux_source_directory(src SOURCE)

# compile

add_library(hcore ${SOURCE})
set_target_properties(hcore PROPERTIES
    DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
    VERSION "@@{VERSION}@@"
    SOVERSION "1")

configure_file(hcore_config.h.in hcore_config.h)
target_include_directories(hcore PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include)
target_include_directories(hcore INTERFACE $<INSTALL_INTERFACE:${HCORE_INSTALL_INCLUDEDIR}>)

if(${CMAKE_BUILD_TYPE} STREQUAL "Debug")
    target_compile_definitions(hcore PUBLIC _HCORE_DEBUG)
    target_compile_options(hcore PRIVATE -g -O0)
endif()

# Test
enable_testing()

add_subdirectory(googletest)
include(GoogleTest)

## Test Cases
add_executable(test_all tests/test_astring.cpp)
target_include_directories(test_all PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include)
target_link_libraries(test_all PRIVATE GTest::gtest_main hcore)
gtest_discover_tests(test_all)

# Package

include(CMakePackageConfigHelpers)
# generate the config file that is includes the exports
configure_package_config_file(${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake.in
    "${CMAKE_CURRENT_BINARY_DIR}/HCoreConfig.cmake"
    INSTALL_DESTINATION "lib/cmake/hcore"
    NO_SET_AND_CHECK_MACRO
    NO_CHECK_REQUIRED_COMPONENTS_MACRO)

# generate the version file for the config file
write_basic_package_version_file(
    "${CMAKE_CURRENT_BINARY_DIR}/HCoreConfigVersion.cmake"
    VERSION "${hcore_VERSION_MAJOR}.${hcore_VERSION_MINOR}"
    COMPATIBILITY AnyNewerVersion
)

# install
install(TARGETS hcore 
    EXPORT HCORE_ARCHIVE
    ARCHIVE DESTINATION ${HCORE_INSTALL_LIBDIR})
install(FILES ${PROJECT_BINARY_DIR}/hcore_config.h
    DESTINATION ${HCORE_INSTALL_INCLUDEDIR})
install(DIRECTORY include/
    DESTINATION ${HCORE_INSTALL_INCLUDEDIR}
    FILES_MATCHING PATTERN "*.h")

install(EXPORT HCORE_ARCHIVE
    FILE hcore.cmake
    DESTINATION ${HCORE_INSTALL_CMAKEDIR})

## install the configuration file
install(FILES
    ${CMAKE_CURRENT_BINARY_DIR}/HCoreConfig.cmake
    ${CMAKE_CURRENT_BINARY_DIR}/HCoreConfigVersion.cmake
    DESTINATION ${HCORE_INSTALL_CMAKEDIR}
    )

# pack
set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
set(CPACK_PACKAGE_DIRECTORY packages)
include(CPack)